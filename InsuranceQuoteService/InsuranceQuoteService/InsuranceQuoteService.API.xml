<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InsuranceQuoteService.Presentation</name>
    </assembly>
    <members>
        <member name="T:InsuranceQuoteService.Presentation.Controllers.ProposalsController">
            <summary>
            Controller para o gerênciamento de propostas
            </summary>
        </member>
        <member name="M:InsuranceQuoteService.Presentation.Controllers.ProposalsController.#ctor(InsuranceQuoteService.Application.Interfaces.ICreateProposalUseCase,InsuranceQuoteService.Application.Interfaces.IListProposalsUseCase,InsuranceQuoteService.Application.Interfaces.IGetProposalByIdUseCase,InsuranceQuoteService.Application.Interfaces.IUpdateProposalsStatusUseCase)">
            <summary>
            Controller para o gerênciamento de propostas
            </summary>
        </member>
        <member name="M:InsuranceQuoteService.Presentation.Controllers.ProposalsController.CreateProposal(InsuranceQuoteService.Domain.Dtos.Proposal.CreateProposalRequestDto,System.Threading.CancellationToken)">
            <summary> Inserir proposta </summary>
            <param name="createProposalRequestDto"> DTO de criação de proposta </param>
            <param name="ctx"> Token de cancelamento </param>
        </member>
        <member name="M:InsuranceQuoteService.Presentation.Controllers.ProposalsController.ListProposals(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary> Obter todas as propostas </summary>
            <param name="pageIndex"> Índice da página </param>
            <param name="pageSize"> Quantidade de itens </param>
            <param name="ctx"> Token de cancelamento </param>
        </member>
        <member name="M:InsuranceQuoteService.Presentation.Controllers.ProposalsController.GetProposalById(System.Guid,System.Threading.CancellationToken)">
            <summary> Consultar proposta </summary>
            <param name="id"> Id da proposta </param>
            <param name="ctx"> Token de cancelamento </param>
        </member>
        <member name="M:InsuranceQuoteService.Presentation.Controllers.ProposalsController.UpdateProposalStatus(System.Guid,InsuranceQuoteService.Domain.Enums.ProposalStatus,System.Threading.CancellationToken)">
            <summary> Alterar status da proposta </summary>
            <param name="id"> Id da proposta </param>
            <param name="newStatus"> Novo status da proposta </param>
            <param name="ctx"> Token de cancelamento </param>
        </member>
        <member name="T:InsuranceQuoteService.Presentation.Extensions.ControllerExtensions">
            <summary>
            Extensões para configurar controllers personalizados na aplicação.
            </summary>
        </member>
        <member name="M:InsuranceQuoteService.Presentation.Extensions.ControllerExtensions.AddCustomControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adiciona controllers personalizados ao IServiceCollection, configurando filtros e opções JSON.
            </summary>
        </member>
        <member name="T:InsuranceQuoteService.Presentation.Extensions.SecurityExtensions">
            <summary>
            Extensões para configurar segurança da aplicação, incluindo políticas de cookies e HSTS.
            </summary>
        </member>
        <member name="M:InsuranceQuoteService.Presentation.Extensions.SecurityExtensions.AddCustomSecurity(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adiciona serviços de segurança personalizados, configurando políticas de cookies e HSTS.
            </summary>
        </member>
        <member name="M:InsuranceQuoteService.Presentation.Extensions.SecurityExtensions.UseCustomSecurity(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adiciona o middleware de segurança personalizado na pipeline da aplicação, ativando HSTS e política de cookies.
            </summary>
        </member>
        <member name="T:InsuranceQuoteService.Presentation.Extensions.SwaggerExtensions">
            <summary>
            Extensões para configurar Swagger na aplicação, incluindo documentação e UI.
            </summary>
        </member>
        <member name="M:InsuranceQuoteService.Presentation.Extensions.SwaggerExtensions.AddCustomSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adiciona serviços de Swagger personalizados à coleção de serviços, configurando documentação e UI.
            </summary>
        </member>
        <member name="M:InsuranceQuoteService.Presentation.Extensions.SwaggerExtensions.UseCustomSwagger(Microsoft.AspNetCore.Builder.WebApplication)">
            <summary>
            Adiciona o middleware de Swagger à pipeline da aplicação, habilitando a UI no ambiente de desenvolvimento.
            </summary>
        </member>
        <member name="T:InsuranceQuoteService.Presentation.Middlewares.ApiResponseExceptionFilterAttribute">
            <summary>
            Captura exceções da API e retorna respostas HTTP padronizadas.
            </summary>
        </member>
        <member name="M:InsuranceQuoteService.Presentation.Middlewares.ApiResponseExceptionFilterAttribute.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            Chamado quando uma exceção é lançada durante o processamento de uma requisição
            </summary>
            <param name="context"></param>
        </member>
    </members>
</doc>
